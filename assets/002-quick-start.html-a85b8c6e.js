import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as u,c as r,e as a,w as s,a as t,b as n,f as o,d as h}from"./app-25f2f90b.js";const k={},g=o('<div class="hint-container tip"><p class="hint-container-title">HTML</p><p>超文本标记语言（<strong>H</strong>yper<strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage, HTML）是一种用于创建网页的标记语言。</p></div><p>HTML 不是一个编程语言，而是一个用于定义文档内容结构的标记语言。由于它不仅能插入普通的文本，还可以插入图片、音频、视频、超链接等内容，因此被称为<strong>超文本</strong>标记语言。</p><p>比如，对于一段文字，可以如下进行表示：</p>',3),m=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n("Neymar is one of the best footballers dribbling."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"})])],-1),b=o(`<div class="hint-container tip"><p class="hint-container-title">p 元素</p><p>p 即为 paragraphs 的缩写，表示段落元素。</p></div><h2 id="html-元素语法" tabindex="-1"><a class="header-anchor" href="#html-元素语法" aria-hidden="true">#</a> HTML 元素语法</h2><p>HTML 文档由元素和文本组成，例如在上述的例子中：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Neymar is one of the best footballers dribbling.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个 <code>&lt;p&gt;</code> 元素由开始标签 <code>&lt;p&gt;</code>、内容（content）和结束标签 <code>&lt;/p&gt;</code> 组成。</p><h3 id="元素" tabindex="-1"><a class="header-anchor" href="#元素" aria-hidden="true">#</a> 元素</h3><p>在 HTML 中，元素由三个部分组成：</p><ul><li>开始标签（Opening tag）：包含元素的名称（本例为 p），被 <code>&lt;</code>、<code>&gt;</code> 所包围。开头标签标志着元素开始或开始生效的地方。</li><li>内容（Content）：元素的内容，本例中就是段落的文本。</li><li>结束标签（Closing tag）：与开始标签相似，只是其在元素名之前包含了一个 <code>/</code>。这标志着该元素的结束。</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>没有包含关闭标签会产生奇怪的结果。</p></div>`,9),_={class:"hint-container tip"},v=t("p",{class:"hint-container-title"},"提示",-1),x={href:"https://html.spec.whatwg.org/multipage/syntax.html#optional-tags",target:"_blank",rel:"noopener noreferrer"},y=t("h3",{id:"元素嵌套",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#元素嵌套","aria-hidden":"true"},"#"),n(" 元素嵌套")],-1),T=t("p",null,"元素可以进行嵌套，比如：",-1),f=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n("Neymar is one of the best footballers "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("strong")]),t("span",{class:"token punctuation"},">")]),n("dribbling"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("strong")]),t("span",{class:"token punctuation"},">")]),n("."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"})])],-1),L=t("h3",{id:"空元素",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#空元素","aria-hidden":"true"},"#"),n(" 空元素")],-1),M=t("p",null,[n("不是所有的元素都拥有开始标签、内容合结束标签。一些元素只有一个标签，用来在此元素的位置插入/嵌入一些东西，这些元素称为"),t("strong",null,"空元素"),n("。")],-1),H=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("img")]),n(),t("span",{class:"token attr-name"},"width"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("50px"),t("span",{class:"token punctuation"},'"')]),n(),t("span",{class:"token attr-name"},"src"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("/blog/assets/image/frontend/basic/html/002/avatar.jpg"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"})])],-1),q=o(`<div class="hint-container note"><p class="hint-container-title">注</p><p>HTML 中，无需在一个空元素的标签末尾添加 <code>/</code>，例如 <code>&lt;img src=&quot;&quot; alt=&quot;&quot; /&gt;</code>。</p><p>然而，当你希望你的 HTML 是有效的 XML 时，这也是一种有效的语法。</p></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><p>在上述例子中，元素中包含了<strong>属性</strong>，用来控制元素的工作方式。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/assets/image/frontend/basic/html/002/avatar.jpg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>属性被放置在开始标签，并由一组被 <code>=</code> 分开的 <code>name</code> 和 <code>value</code> 组成，通常情况下用 <code>&quot;&quot;</code> 包裹 <code>value</code>。</p><p>属性与元素名称之间包含一个空格，如果有多个属性，属性之间由空格隔开。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>建议始终添加引号——这样可以避免很多问题，并且使代码更易读。</p></div><h3 id="常用属性" tabindex="-1"><a class="header-anchor" href="#常用属性" aria-hidden="true">#</a> 常用属性</h3><p>以下属性使用于所有元素。</p><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">id</td><td style="text-align:center;">定义元素唯一 id</td></tr><tr><td style="text-align:center;">class</td><td style="text-align:center;">定义一个或多个类名</td></tr><tr><td style="text-align:center;">style</td><td style="text-align:center;">定义元素的样式</td></tr><tr><td style="text-align:center;">title</td><td style="text-align:center;">描述元素的额外信息</td></tr></tbody></table><h3 id="布尔属性" tabindex="-1"><a class="header-anchor" href="#布尔属性" aria-hidden="true">#</a> 布尔属性</h3><p>一般情况下，属性值必须由 <code>&quot;&quot;</code> 引用，但如果该属性值为空字符串，则可以完全省略该值及 <code>=</code>。</p><p>这种情况下，将这些属性称为布尔属性。</p><p>例如，考虑 <code>disabled</code> 属性，你可以将其分配给表单输入元素。用它来禁用表单输入元素，这样用户就不能输入了。被禁用的元素通常有一个灰色的外观。</p>`,14),E=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("input")]),n(),t("span",{class:"token attr-name"},"disabled"),t("span",{class:"token punctuation"},">")]),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"})])],-1),A=t("h2",{id:"html-文档结构",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#html-文档结构","aria-hidden":"true"},"#"),n(" HTML 文档结构")],-1),C=t("p",null,"一个基本的 HTML 文档如下所示：",-1),D=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token doctype"},[t("span",{class:"token punctuation"},"<!"),t("span",{class:"token doctype-tag"},"DOCTYPE"),n(),t("span",{class:"token name"},"html"),t("span",{class:"token punctuation"},">")]),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("html")]),n(),t("span",{class:"token attr-name"},"lang"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("en"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("head")]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("meta")]),n(),t("span",{class:"token attr-name"},"charset"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("UTF-8"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("meta")]),n(),t("span",{class:"token attr-name"},"http-equiv"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("X-UA-Compatible"),t("span",{class:"token punctuation"},'"')]),n(),t("span",{class:"token attr-name"},"content"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("IE=edge"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("meta")]),n(),t("span",{class:"token attr-name"},"name"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("viewport"),t("span",{class:"token punctuation"},'"')]),n(),t("span",{class:"token attr-name"},"content"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),n("width=device-width, initial-scale=1.0"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("title")]),t("span",{class:"token punctuation"},">")]),n("Document"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("title")]),t("span",{class:"token punctuation"},">")]),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("head")]),t("span",{class:"token punctuation"},">")]),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("body")]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("h1")]),t("span",{class:"token punctuation"},">")]),n("Sample page"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("h1")]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n("This is a "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("a")]),n(),t("span",{class:"token attr-name"},"href"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),n("simple"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("a")]),t("span",{class:"token punctuation"},">")]),n(" sample."),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`
  `),t("span",{class:"token comment"},"<!-- this is a comment -->"),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("body")]),t("span",{class:"token punctuation"},">")]),n(`
`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("html")]),t("span",{class:"token punctuation"},">")]),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),B=o('<p>其中：</p><ul><li><code>&lt;!DOCTYPE html&gt;</code> 用于声明该文档使用 HTML5 标准。</li><li><code>&lt;html&gt;</code> 标签表示 HTML 文档的开始。</li><li><code>&lt;head&gt;</code> 标签包含了网页的元信息，如标题、样式表和脚本等。</li><li><code>&lt;title&gt;</code> 标签用于定义网页的标题，显示在浏览器的标题栏中。</li><li><code>&lt;body&gt;</code> 标签包含了网页的主要内容。</li><li><code>&lt;!-- --&gt;</code> 代表文档注释内容。</li></ul><p>下面将介绍 HTML 文档结构中较为复杂的元素。</p><h3 id="doctype" tabindex="-1"><a class="header-anchor" href="#doctype" aria-hidden="true">#</a> DOCTYPE</h3><p>在 HTML 中，每个 HTML 文档必须以 DOCTYPE 开头，它的目的在于告诉浏览器应该以什么样的文档类型定义（Document Type Definition, DTD）来解析文档。</p>',5),U={class:"hint-container info"},z=t("p",{class:"hint-container-title"},"DTD",-1),N=t("p",null,"DTD：文档类型定义，是一套关于标记符的语法规则。",-1),Q=t("p",null,"在 HTML5 以前，HTML 都是基于标准通用标记语言（Standard Generalized Markup Language，SGML）来实现的，而 SGML 使用 DTD 来定义不同版本的语法。",-1),V=o('<h3 id="html-元素" tabindex="-1"><a class="header-anchor" href="#html-元素" aria-hidden="true">#</a> <code>&lt;html&gt;</code> 元素</h3><p><code>&lt;html&gt;</code> 元素表示一个 HTML 文档的根（顶级元素），所以也被称为<strong>根元素</strong>。</p><p>W3C 标准建议为 <code>&lt;html&gt;</code> 元素增加 <code>lang</code> 属性，作用在于：</p><ul><li>帮助语音合成工具确定要使用的发音；</li><li>帮助翻译工具确定要使用的翻译规则。</li></ul><p>一些常用的规则：</p><ul><li><code>lang=&quot;en&quot;</code> 表示该文档的语言为英文；</li><li><code>lang=&quot;zh-CN&quot;</code> 表示该文档的语言为中文。</li></ul><h3 id="head-元素" tabindex="-1"><a class="header-anchor" href="#head-元素" aria-hidden="true">#</a> <code>&lt;head&gt;</code> 元素</h3><p><code>&lt;head&gt;</code> 元素用于规定网页的元信息，一般常见的配置：</p><ul><li><code>&lt;title&gt;</code> 标签用于定义网页的标题。</li><li><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code> 用于设置网页的字符编码。</li></ul>',9),O={class:"hint-container info"},S=t("p",{class:"hint-container-title"},"UTF-8",-1),J=t("p",null,"utf-8 字符集包含了大多数人类书面语言的字符。基本上它能识别输入的所有文本内容。",-1),w=t("p",null,"不设置或者错误设置可能会导致文档乱码。",-1),K=t("p",null,"W3C 也将 UTF-8 标记为推荐的字符编码，所以建议在任何 HTML 文件中都添加此标签。",-1),P=t("h3",{id:"html-注释",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#html-注释","aria-hidden":"true"},"#"),n(" HTML 注释")],-1),F=t("p",null,"HTML 拥有在代码中写注释的机制。浏览器会忽略注释，有效地使注释对用户来说不可见。注释的目的是让你在代码中加入注释，以解释你的逻辑或编码。如果你在离开很久后回到一个代码库，以至于你不能完全记住它，这就非常有用。同样，当不同的人在进行修改和更新时，注释也是非常宝贵的。",-1),I=t("p",null,[n("为了将一段 HTML 中的内容置为注释，你需要将其用特殊的记号 "),h(" 和 "),n(" 包裹起来，比如：")],-1),R=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n("我在注释外！"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`

`),t("span",{class:"token comment"},"<!-- <p>我在注释内！</p> -->"),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),X=t("h2",{id:"html-空白",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#html-空白","aria-hidden":"true"},"#"),n(" HTML 空白")],-1),Y=t("p",null,"HTML 中对空格的处理有点特殊，无论在 HTML 元素的内容中使用多少空格（包括一个或多个空白字符或换行），当渲染这些代码的时候，HTML 解释器会将连续出现的空白字符减少为一个单独的空格符。",-1),W=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n("狗 狗 很 呆 萌。"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`

`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`狗 狗        很
         呆 萌。`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),G=o('<h2 id="字符引用" tabindex="-1"><a class="header-anchor" href="#字符引用" aria-hidden="true">#</a> 字符引用</h2><p>在 HTML 中，字符 <code>&lt;</code>、<code>&gt;</code>、<code>&quot;</code>、<code>&#39;</code> 和 <code>&amp;</code> 是特殊字符。它们是 HTML 语法自身的一部分，那么你如何将这些字符包含进你的文本中呢，比如说如果你真的想要在文本中使用符号 <code>&amp;</code> 或者 <code>&lt;</code>，而不想让它们被浏览器视为代码并被解释？</p><p>我们必须使用字符引用——表示字符的特殊编码，它们可以在那些情况下使用。每个字符引用以符号 <code>&amp;</code> 开始，以分号<code>;</code>结束。</p><p>在下面的案例中，你会看到第一段是错误的，因为浏览器会认为第二个 <code>&lt;p&gt;</code> 是开始一个新的段落！第二段是正确的，因为我们用字符引用来代替了角括号 <code>&lt;</code> 和 <code>&gt;</code> 符号。</p>',4),j=t("div",{class:"language-html line-numbers-mode","data-ext":"html"},[t("pre",{class:"language-html"},[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n("HTML 中用 "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n(" 来定义段落元素。"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`

`),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),n("p")]),t("span",{class:"token punctuation"},">")]),n("HTML 中用 "),t("span",{class:"token entity named-entity",title:"<"},"&lt;"),n("p"),t("span",{class:"token entity named-entity",title:">"},"&gt;"),n(" 来定义段落元素"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),n("p")]),t("span",{class:"token punctuation"},">")]),n(`
`)])]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"}),t("div",{class:"line-number"}),t("div",{class:"line-number"})])],-1),Z=o('<p>下面是一些常用的字符引用</p><table><thead><tr><th style="text-align:center;">原义字符</th><th style="text-align:center;">等价字符引用</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&lt;</code></td><td style="text-align:center;"><code>&amp;lt;</code></td></tr><tr><td style="text-align:center;"><code>&gt;</code></td><td style="text-align:center;"><code>&amp;gt;</code></td></tr><tr><td style="text-align:center;"><code>&quot;</code></td><td style="text-align:center;"><code>&amp;quot;</code></td></tr><tr><td style="text-align:center;"><code>&#39;</code></td><td style="text-align:center;"><code>apos</code></td></tr><tr><td style="text-align:center;"><code>&amp;</code></td><td style="text-align:center;"><code>&amp;amp;</code></td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">备注</p><p>不需要为任何其他符号使用实体引用，因为只要你的 HTML 的字符编码设置为 UTF-8，现代浏览器就能很好地处理实际符号。</p></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2>',4);function $(tt,nt){const e=c("CodeDemo"),p=c("ExternalLinkIcon"),l=c("RouterLink"),i=c("Mermaid");return u(),r("div",null,[g,a(e,{id:"code-demo-11",type:"normal",title:"HTML%20%E6%AE%B5%E8%90%BD",code:"eJwFQFEKgCAMvcpjB6j/CI/QCfpxNFOYTnQ/Ed09XspelTbaezjkqXGgTFgTWIJnAct0JDPnqCpj4hqFWUu7l33t4Wz0/S0IF+M="},{default:s(()=>[m]),_:1}),b,t("div",_,[v,t("p",null,[n("某些情况下一些标签可以被省略，详见 "),t("a",x,[n("optional-tags"),a(p)])])]),y,T,a(e,{id:"code-demo-68",type:"normal",title:"%E5%85%83%E7%B4%A0%E5%B5%8C%E5%A5%97",code:"eJwtyMsNgCAMANBVGgaQuyGM4AReIJZPAi1pezHG3b14fY9rNofbXVjxwHsmga7AhMAFrCFkVIPCbDmNgaIQ1ISpxkt6zqNTDf6XLfgVT3LvBwbKHkA="},{default:s(()=>[f]),_:1}),L,M,a(e,{id:"code-demo-77",type:"normal",title:"%E7%A9%BA%E5%85%83%E7%B4%A0",code:"eJwVzEsOQDAQANCryBzANBIbwUm6GVRV+ktngkTcHcu3eTdsEjx00Ltgq9Mtsg0aWpUvDRWX+QNOPlkkZiOMLpA1uJYUxcQFJ2I341+gUg3SQUKl3rPVMOoIzwsN0SCh"},{default:s(()=>[H]),_:1}),q,a(e,{id:"code-demo-170",type:"normal",title:"%E5%B8%83%E5%B0%94%E5%B1%9E%E6%80%A7",code:"eJyrVsooyc1RslKyycwrKC1RSMksTkzKSU2xi8lTqgUAlvkKPA=="},{default:s(()=>[E]),_:1}),A,C,a(e,{id:"code-demo-179",type:"normal",title:"HTML%20%E6%96%87%E6%A1%A3%E7%BB%93%E6%9E%84",code:"eJxVUF1LwzAU/St3eTarfRNJC7JN8EnBDhT6krXXJpAv27sOEf+7t+0mDgKXez5ycvItDHkn7oVabZ831fvLDiagrIOaJjgduqIWGGoxY6hbngDKI2lojO4HJBbsq0d5N2sunCFKEj+PdmT6Te4f5Cb6pMkeHNYCmhgIw2R92hXYdoz9MwftkanR4inFnq70J9uSKVocbYNyXm7ABktWOzk02mGRr28vt5Elh+U2NkfPbpUtOzfJzlXUIbZfi9bk5av2ySEk3SEr8gVPZWXsAHw0KC7W4wc/gxMGO6lVpksYZuNaZWnxrKQE+nM10U/xIOUcfY7khOWrxc8v0yqB0A=="},{default:s(()=>[D]),_:1}),B,t("div",U,[z,N,Q,t("p",null,[n("详情请见 "),a(l,{to:"/frontend/basic/html/003-DOCTYPE.html"},{default:s(()=>[n("DOCTYPE")]),_:1})])]),V,t("div",O,[S,J,w,K,t("p",null,[n("详情请见 "),a(l,{to:"/computer-science/operating-system/001-character-encoding.html"},{default:s(()=>[n("字符编码")]),_:1})])]),P,F,I,a(e,{id:"code-demo-314",type:"normal",title:"HTML%20%E6%B3%A8%E9%87%8A",code:"eJyrVsooyc1RslKyKbB71jHx6ZwVzzaveNne9XTJtPd7Gm30C+xi8mLybBR1dRXQVbS1QlUo6OoCVSnVAgCYVSSQ"},{default:s(()=>[R]),_:1}),X,Y,a(e,{id:"code-demo-323",type:"normal",title:"HTML%20%E6%B3%A8%E9%87%8A",code:"eJyrVsooyc1RslKyKbB73j1dAYSf7utQeDqxTeHFhJ7HDU02+gV2MXkxeUgKoACoLiYPxsHQoVQLAB7aJcI="},{default:s(()=>[W]),_:1}),G,a(e,{id:"code-demo-338",type:"normal",title:"HTML%20%E6%B3%A8%E9%87%8A",code:"eJyrVsooyc1RslKyKbDzCPH1UXiyY+3zKSsUgFyFZ3OXPl0368nOzmfrtr6YsPdpa/PzLQseNzTZ6BfYxeTF5KFpUcspsS5QSy+xxq4RokupFgCK1DnU"},{default:s(()=>[j]),_:1}),Z,a(i,{id:"mermaid-406",code:"eJzLzcxLyU0s4FJQKMrPL9HQeLp/9cuG+U/3NDxd3q2pCRRWUPAI8fVReNra/HzLghfr1z7bPBUsqgAVQuE83drzdOl0qNDzlbuQlDzdOO9Zw3KY6h07nk9ZgSbU/HTDFCQhsLXPprU/W7j4+e7Jz+a1QBW6+DuHRAa4Qnk2GSW5OXaobrHJSE1MQRODmLZ5xcv2LoTpQBc+n7kX4ry105+vWfZ0z1Sgu7gA4W53QQ=="})])}const et=d(k,[["render",$],["__file","002-quick-start.html.vue"]]);export{et as default};
