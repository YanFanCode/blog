const e=JSON.parse('{"key":"v-470dec8f","path":"/frontend/framework/vue/07%E3%80%81%E7%BB%84%E5%90%88%E5%BC%8FAPI%E5%9F%BA%E7%A1%80.html","title":"组合式 API 基础","lang":"zh-CN","frontmatter":{"title":"组合式 API 基础","date":"2022-05-30T00:00:00.000Z","category":["Vue"],"tag":["组合式 API"],"description":"options API 的缺点 使用 (data、`computed、methods、watch) 组件选项来组织逻辑通常都很有效。然而，当我们的组件开始变得更大时，逻辑关注点的列表也会增长，会导致组件难以阅读和理解。 这种碎片化使得理解和维护复杂组件变得困难。选项的分离掩盖了潜在的逻辑问题。此外，在处理单个逻辑关注点时，我们必须不断地“跳转”相关代码...","head":[["meta",{"property":"og:url","content":"https://yanfancode.github.io/blog/blog/frontend/framework/vue/07%E3%80%81%E7%BB%84%E5%90%88%E5%BC%8FAPI%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"My Konwledge Base"}],["meta",{"property":"og:title","content":"组合式 API 基础"}],["meta",{"property":"og:description","content":"options API 的缺点 使用 (data、`computed、methods、watch) 组件选项来组织逻辑通常都很有效。然而，当我们的组件开始变得更大时，逻辑关注点的列表也会增长，会导致组件难以阅读和理解。 这种碎片化使得理解和维护复杂组件变得困难。选项的分离掩盖了潜在的逻辑问题。此外，在处理单个逻辑关注点时，我们必须不断地“跳转”相关代码..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-31T09:43:34.000Z"}],["meta",{"property":"article:author","content":"yanfan"}],["meta",{"property":"article:tag","content":"组合式 API"}],["meta",{"property":"article:published_time","content":"2022-05-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-31T09:43:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组合式 API 基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-31T09:43:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yanfan\\",\\"url\\":\\"https://github.com/YanFanCode/blog\\",\\"email\\":\\"2595437938@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"options API 的缺点","slug":"options-api-的缺点","link":"#options-api-的缺点","children":[]},{"level":2,"title":"setup 选项","slug":"setup-选项","link":"#setup-选项","children":[]},{"level":2,"title":"响应式","slug":"响应式","link":"#响应式","children":[{"level":3,"title":"reactive API","slug":"reactive-api","link":"#reactive-api","children":[]},{"level":3,"title":"ref API","slug":"ref-api","link":"#ref-api","children":[]}]},{"level":2,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[]},{"level":2,"title":"watch","slug":"watch","link":"#watch","children":[]},{"level":2,"title":"computed","slug":"computed","link":"#computed","children":[]},{"level":2,"title":"provide/inject","slug":"provide-inject","link":"#provide-inject","children":[{"level":3,"title":"使用 provide","slug":"使用-provide","link":"#使用-provide","children":[]},{"level":3,"title":"使用 inject","slug":"使用-inject","link":"#使用-inject","children":[]},{"level":3,"title":"响应式","slug":"响应式-1","link":"#响应式-1","children":[]},{"level":3,"title":"修改响应式 property","slug":"修改响应式-property","link":"#修改响应式-property","children":[]}]},{"level":2,"title":"模板引用","slug":"模板引用","link":"#模板引用","children":[]}],"git":{"createdTime":1693475014000,"updatedTime":1693475014000,"contributors":[{"name":"yanfan","email":"2595437938@qq.com","commits":1}]},"readingTime":{"minutes":5.73,"words":1719},"filePathRelative":"frontend/framework/vue/07、组合式API基础.md","localizedDate":"2022年5月30日","excerpt":"","autoDesc":true}');export{e as data};
